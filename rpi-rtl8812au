#!/usr/bin/env bash

# REQUIRES: git, make, gcc

set -o nounset
set -o errexit

DRIVER_PATH="/lib/modules/$(uname -r)/kernel/drivers/net/wireless/8812au.ko"
DRIVER_FILE=$(basename "${DRIVER_PATH}")


echo "Checking online version ..."
DKMS=$(wget https://raw.githubusercontent.com/gnab/rtl8812au/master/dkms.conf -qq -O -)
DKMS_VER=$(echo "${DKMS}" | grep "PACKAGE_VERSION" | sed -n "s/.*=\(.*\)/\1/p")
echo "   ${DKMS_VER}"
echo ""

echo "Checking for installed driver ..."
if [[ -e "${DRIVER_PATH}" ]]; then
	echo "   ${DRIVER_PATH}"
	CURR_VER=$(modinfo "${DRIVER_FILE%.*}" | grep "^version:" | sed -n "s/.*v\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p")
	if [[ "${CURR_VER}" != "${DKMS_VER}" ]]; then
		echo "   v${DKMS_VER} != v${CURR_VER}, removing old version ..."
		sudo rmmod "${DRIVER_FILE%.*}"
		sudo rm -f "${DRIVER_PATH}"
	else
		echo "   v${DKMS_VER} == v${CURR_VER}, no updates available"
		echo ""
		exit 0
	fi
else
	echo "   Did not find any driers"
fi
echo ""

echo "Checking rtl8812au HEAD version ..."
GIT_BRANCH=$(wget https://api.github.com/repos/gnab/rtl8812au -qq -O - | sed -n "s/.*\"default_branch\": \"\([^\"]\+\)\".*/\1/p")
GIT_HEAD=$(wget https://api.github.com/repos/gnab/rtl8812au/git/refs/heads/${GIT_BRANCH} -qq -O - | sed -n "s/.*\"sha\": \"\([^\"]\+\)\".*/\1/p")
echo "   ${GIT_HEAD:-NONE?}"
echo ""
DRIVER_DIR="/sr/src/rtl8812au-${GIT_HEAD:0:7}"

echo "Cloning from git to ${DRIVER_DIR} ..."
sudo rm -rf "${DRIVER_DIR}" > /dev/null
sudo git clone --quiet --depth 1 https://github.com/gnab/rtl8812au.git "${DRIVER_DIR}" > /dev/null
if [[ -e "${DRIVER_DIR}/Makefile" ]]; then
	echo "Running make ..."
	cd "${DRIVER_DIR}"
	sudo sed -i "s/CONFIG_PLATFORM_I386_PC = y/CONFIG_PLATFORM_I386_PC = n/" Makefile > /dev/null
	sudo sed -i "s/CONFIG_PLATFORM_ARM_RPI = n/CONFIG_PLATFORM_ARM_RPI = y/" Makefile > /dev/null
	sudo make -j$(nproc) > /dev/null
	if [[ -e "${DRIVER_FILE}" ]]; then
		echo "   Installing ..."
		sudo cp "${DRIVER_FILE}" "${DRIVER_PATH}"
		sudo depmod
		sudo modprobe "${DRIVER_FILE%.*}"
		MODPR=$(lsmod | grep "^${DRIVER_FILE%.*}")
		if [[ "${MODPR}" != "" ]]; then
			echo "      Install succeeded"
		else
			echo "      Install failed"
		fi
	else
		echo "   Build failed"
	fi
else
	echo "   Git clone failed"
fi
echo ""
